name: "nuget-pack-push"
description: "Packages and pushes NuGet packages"
inputs:
  nuget-feed-source: 
    description: "The source (repo) name of the NuGet feed to push to"
    required: true
  nuget-feed-url: 
    description: "The URL of the NuGet feed to push to"
    required: true
  username:
    description: "The username to use when reading/pushing to the NuGet feed"
    required: true
  password:
    description: "The password/PAT to use when pushing to the NuGet feed"
    required: true
  package-project:
    description: "The package name to push to the NuGet feed"
    required: true
  package-folder:
    description: "The folder prefix where the project file is. Defaults to ./"
    required: false
    default: "./" 
  version-suffix:
    description: "The version suffix to append to the package version. This value will be ignored if the package Version is specified. Defaults to empty string."
    required: false
    default: ""
  version:
    description: "The package version. This value will override Version in *.csproj. Defaults to empty string."
    required: false
    default: ""
runs: 
  using: "composite"
  steps:
    - name: Setup NuGet.exe
      uses: NuGet/setup-nuget@v1.0.5
      with:
        nuget-version: 5.9.1
    - name: Auth NuGet
      run: nuget sources add -Name ${{ inputs.nuget-feed-source }} -Source ${{ inputs.nuget-feed-url }} -username ${{ inputs.username }} -password ${{ inputs.password }}
      shell: bash

    - name: Add Dotnet NuGet Sources
      run: dotnet nuget add source ${{ inputs.nuget-feed-url }} -n "GitHubPackages" -u ${{ inputs.username }} -p ${{ inputs.password }} --store-password-in-clear-text
      shell: bash

    - name: Dotnet Restore ${{ inputs.package-project }}
      run: dotnet restore ${{ inputs.package-project }} 
      working-directory: ${{ inputs.package-folder }}
      shell: bash

    - name: Dotnet Build ${{ inputs.package-project }}
      run: dotnet build ${{ inputs.package-project }} -c Release
      working-directory: ${{ inputs.package-folder }}
      shell: bash

    - name: Nuget Pack ${{ inputs.package-project }}
      run: >
        dotnet pack --configuration Release --output "/tmp" ${{ inputs.package-project }} --version-suffix "${{ inputs.version-suffix }}" --verbosity normal
        $([ -z "${{ inputs.version }}" ] || echo "/p:version=${{ inputs.version }}")
      shell: bash       
      working-directory: ${{ inputs.package-folder }}

    - name: Nuget Push
      run: |
        nuget push "/tmp/*.nupkg" ${{ inputs.password }} -src ${{ inputs.nuget-feed-source }} -SkipDuplicate
      shell: bash

name: "setup-maven"
description: "Setup runner environment (Github or self hosted runners) to be able build maven projects"
inputs:
  java-version:
    description: "Java version"
    required: true
  restore-cache:
    description: "If cache should be restored"
    required: false
    default: "true"

  maven-aws-access-key:
    description: "Access key for credentials for accessing maven artifacts S3 repositories"
    required: true
  maven-aws-secret-key:
    description: "Secret key for credentials for accessing maven artifacts S3 repositories"
    required: true
  account-id:
    description: "Account id where maven artifacts S3 repositories exist."
    required: true

  maven-wagon-version:
    description: "Wagon version"
    required: false
    default: "1.0.0"

  changed-modules-enable:
    description: "Enable evaluating of changed maven modules and set in output variable: changed-modules"
    required: false
    default: "false"
  changed-modules-always-included:
    description: "Set always included modules if changed-module is enabled"
    required: false
    default: ""

  self-hosted-runner-maven-version:
    description: "Maven version used in self hosted runners"
    required: false
    default: "3.8.2"

outputs:
  changed-modules:
    description: "List of changed modules evaluated from last two commits if enabled"
    value: ${{ steps.maven_changed_modules.outputs.changed_modules }}

runs:
  using: "composite"
  steps:
    - name: Setup maven artifact repository inputs
      shell: bash
      run: |
        AWS_REGION="eu-west-1"

        sudo aws configure set aws_access_key_id ${{ inputs.maven-aws-access-key }} --profile s3-artifacts
        sudo aws configure set aws_secret_access_key ${{ inputs.maven-aws-secret-key }} --profile s3-artifacts
        sudo aws configure set region ${AWS_REGION} --profile s3-artifacts

        echo MAVEN_AWS_ACCESS_KEY_ID="${{ inputs.maven-aws-access-key }}" >> $GITHUB_ENV
        echo MAVEN_AWS_SECRET_ACCESS_KEY="${{ inputs.maven-aws-secret-key }}" >> $GITHUB_ENV

        echo MAVEN_SNAPSHOT_URL="s3://maven-snapshot-repository-${{ inputs.account-id }}" >> $GITHUB_ENV

        MAVEN_RELEASE_URL="s3://maven-release-repository-${{ inputs.account-id }}"
        echo MAVEN_RELEASE_URL="${MAVEN_RELEASE_URL}" >> $GITHUB_ENV
        
        echo MAVEN_WAGON_PATH="${MAVEN_RELEASE_URL}/com/ohpen/maven/s3-wagon/${{ inputs.maven-wagon-version }}/s3-wagon-${{ inputs.maven-wagon-version }}-jar-with-dependencies.jar" >> $GITHUB_ENV
      
        echo DOCKER_REGISTRY="${{ inputs.account-id }}.dkr.ecr.${AWS_REGION}.amazonaws.com" >> $GITHUB_ENV
        
        IS_SELF_HOSTED_RUNNER="false"
        if [[ "$USER" == "ec2-user" ]];
          then
            IS_SELF_HOSTED_RUNNER="true"
        fi
                
        echo IS_SELF_HOSTED_RUNNER="${IS_SELF_HOSTED_RUNNER}" >> $GITHUB_ENV

    - name: Setup JDK
      uses: actions/setup-java@v2
      with:
        java-version: ${{ inputs.java-version }}
        distribution: temurin
        overwrite-settings: false

    - name: "[SELF_HOSTED] Install Maven"
      if: env.IS_SELF_HOSTED_RUNNER == 'true'
      uses: stCarolas/setup-maven@v4.2  # when changing version of action, verify ext path in runner-specific step
      with:
        maven-version: ${{ inputs.self-hosted-runner-maven-version }}

    - name: Evaluate runner specific information
      id: runner-specific
      shell: bash
      run: |
        if [[ "${{ env.IS_SELF_HOSTED_RUNNER }}" == "false" ]];
          then
            MAVEN_EXT_PATH=/usr/share/apache-maven-*/lib/ext
          else
            MAVEN_EXT_PATH=${RUNNER_TOOL_CACHE}/maven/${{ inputs.self-hosted-runner-maven-version }}/x64/lib/ext
        fi
        echo "::set-output name=maven_ext_path::${MAVEN_EXT_PATH}"

    - name: Download Maven S3 repository extension
      shell: bash
      run: |
        
        sudo aws s3 cp ${{ env.MAVEN_WAGON_PATH }} ${{ steps.runner-specific.outputs.maven_ext_path }} --profile s3-artifacts

    - name: Setup Maven settings
      shell: bash
      run: cp ${{ github.action_path }}/../settings.xml ${HOME}/.m2/

    - name: Restore Maven cache
      if: inputs.restore-cache == 'true'
      uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore

    - name: Find maven changed modules
      if: inputs.changed-modules-enable == 'true'
      id: maven_changed_modules
      shell: bash
      run: |
        bash ${{ github.action_path }}/../changed-modules.sh \
          -p "${{ github.event.before }}" \
          -a "${{ github.sha }}" \
          -i "${{ inputs.changed-modules-always-included }}"
